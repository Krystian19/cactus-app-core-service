// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/release_description.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReleaseDescription struct {
	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Relations
	ReleaseId            int64    `protobuf:"varint,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	LanguageId           int64    `protobuf:"varint,4,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseDescription) Reset()         { *m = ReleaseDescription{} }
func (m *ReleaseDescription) String() string { return proto.CompactTextString(m) }
func (*ReleaseDescription) ProtoMessage()    {}
func (*ReleaseDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4cf4e4c2042cbb3, []int{0}
}

func (m *ReleaseDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseDescription.Unmarshal(m, b)
}
func (m *ReleaseDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseDescription.Marshal(b, m, deterministic)
}
func (m *ReleaseDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseDescription.Merge(m, src)
}
func (m *ReleaseDescription) XXX_Size() int {
	return xxx_messageInfo_ReleaseDescription.Size(m)
}
func (m *ReleaseDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseDescription.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseDescription proto.InternalMessageInfo

func (m *ReleaseDescription) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReleaseDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ReleaseDescription) GetReleaseId() int64 {
	if m != nil {
		return m.ReleaseId
	}
	return 0
}

func (m *ReleaseDescription) GetLanguageId() int64 {
	if m != nil {
		return m.LanguageId
	}
	return 0
}

type ReleaseDescriptionsRequest struct {
	ReleaseId            int64    `protobuf:"varint,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseDescriptionsRequest) Reset()         { *m = ReleaseDescriptionsRequest{} }
func (m *ReleaseDescriptionsRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseDescriptionsRequest) ProtoMessage()    {}
func (*ReleaseDescriptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4cf4e4c2042cbb3, []int{1}
}

func (m *ReleaseDescriptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseDescriptionsRequest.Unmarshal(m, b)
}
func (m *ReleaseDescriptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseDescriptionsRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseDescriptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseDescriptionsRequest.Merge(m, src)
}
func (m *ReleaseDescriptionsRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseDescriptionsRequest.Size(m)
}
func (m *ReleaseDescriptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseDescriptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseDescriptionsRequest proto.InternalMessageInfo

func (m *ReleaseDescriptionsRequest) GetReleaseId() int64 {
	if m != nil {
		return m.ReleaseId
	}
	return 0
}

type ReleaseDescriptionsResponse struct {
	ReleaseDescriptions  []*ReleaseDescription `protobuf:"bytes,1,rep,name=ReleaseDescriptions,proto3" json:"ReleaseDescriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ReleaseDescriptionsResponse) Reset()         { *m = ReleaseDescriptionsResponse{} }
func (m *ReleaseDescriptionsResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseDescriptionsResponse) ProtoMessage()    {}
func (*ReleaseDescriptionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f4cf4e4c2042cbb3, []int{2}
}

func (m *ReleaseDescriptionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseDescriptionsResponse.Unmarshal(m, b)
}
func (m *ReleaseDescriptionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseDescriptionsResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseDescriptionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseDescriptionsResponse.Merge(m, src)
}
func (m *ReleaseDescriptionsResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseDescriptionsResponse.Size(m)
}
func (m *ReleaseDescriptionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseDescriptionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseDescriptionsResponse proto.InternalMessageInfo

func (m *ReleaseDescriptionsResponse) GetReleaseDescriptions() []*ReleaseDescription {
	if m != nil {
		return m.ReleaseDescriptions
	}
	return nil
}

func init() {
	proto.RegisterType((*ReleaseDescription)(nil), "proto.ReleaseDescription")
	proto.RegisterType((*ReleaseDescriptionsRequest)(nil), "proto.ReleaseDescriptionsRequest")
	proto.RegisterType((*ReleaseDescriptionsResponse)(nil), "proto.ReleaseDescriptionsResponse")
}

func init() { proto.RegisterFile("proto/release_description.proto", fileDescriptor_f4cf4e4c2042cbb3) }

var fileDescriptor_f4cf4e4c2042cbb3 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4a, 0xcd, 0x49, 0x4d, 0x2c, 0x4e, 0x8d, 0x4f, 0x49, 0x2d, 0x4e, 0x2e, 0xca,
	0x2c, 0x28, 0xc9, 0xcc, 0xcf, 0xd3, 0x03, 0xcb, 0x08, 0xb1, 0x82, 0x29, 0xa5, 0x36, 0x46, 0x2e,
	0xa1, 0x20, 0x88, 0x22, 0x17, 0x84, 0x1a, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xe6, 0x20, 0xa6, 0xcc, 0x14, 0x21, 0x05, 0x2e, 0x6e, 0x24, 0x23, 0x24, 0x98, 0x14,
	0x18, 0x35, 0x38, 0x83, 0x90, 0x85, 0x84, 0x64, 0xb9, 0xb8, 0x60, 0x96, 0x65, 0xa6, 0x48, 0x30,
	0x83, 0x75, 0x72, 0x42, 0x45, 0x3c, 0x53, 0x84, 0xe4, 0xb9, 0xb8, 0x73, 0x12, 0xf3, 0xd2, 0x4b,
	0x13, 0xd3, 0xc1, 0xf2, 0x2c, 0x60, 0x79, 0x2e, 0x98, 0x90, 0x67, 0x8a, 0x92, 0x35, 0x97, 0x14,
	0xa6, 0x3b, 0x8a, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0xd0, 0x4c, 0x67, 0x44, 0x33, 0x5d,
	0x29, 0x8b, 0x4b, 0x1a, 0xab, 0xe6, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x6f, 0x2e, 0x61,
	0x2c, 0xd2, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x92, 0x90, 0x00, 0xd1, 0xc3, 0x54, 0x11,
	0x84, 0x4d, 0x97, 0x51, 0x25, 0x97, 0x24, 0xa6, 0x70, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa,
	0x50, 0x0c, 0x56, 0x9b, 0x84, 0x14, 0x71, 0xda, 0x01, 0xf3, 0xa1, 0x94, 0x12, 0x3e, 0x25, 0x10,
	0x7f, 0x24, 0xb1, 0x81, 0x95, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x23, 0xea, 0x4e,
	0xdd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReleaseDescriptionServiceClient is the client API for ReleaseDescriptionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReleaseDescriptionServiceClient interface {
	ReleaseDescriptions(ctx context.Context, in *ReleaseDescriptionsRequest, opts ...grpc.CallOption) (*ReleaseDescriptionsResponse, error)
}

type releaseDescriptionServiceClient struct {
	cc *grpc.ClientConn
}

func NewReleaseDescriptionServiceClient(cc *grpc.ClientConn) ReleaseDescriptionServiceClient {
	return &releaseDescriptionServiceClient{cc}
}

func (c *releaseDescriptionServiceClient) ReleaseDescriptions(ctx context.Context, in *ReleaseDescriptionsRequest, opts ...grpc.CallOption) (*ReleaseDescriptionsResponse, error) {
	out := new(ReleaseDescriptionsResponse)
	err := c.cc.Invoke(ctx, "/proto.ReleaseDescriptionService/ReleaseDescriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReleaseDescriptionServiceServer is the server API for ReleaseDescriptionService service.
type ReleaseDescriptionServiceServer interface {
	ReleaseDescriptions(context.Context, *ReleaseDescriptionsRequest) (*ReleaseDescriptionsResponse, error)
}

// UnimplementedReleaseDescriptionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReleaseDescriptionServiceServer struct {
}

func (*UnimplementedReleaseDescriptionServiceServer) ReleaseDescriptions(ctx context.Context, req *ReleaseDescriptionsRequest) (*ReleaseDescriptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseDescriptions not implemented")
}

func RegisterReleaseDescriptionServiceServer(s *grpc.Server, srv ReleaseDescriptionServiceServer) {
	s.RegisterService(&_ReleaseDescriptionService_serviceDesc, srv)
}

func _ReleaseDescriptionService_ReleaseDescriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseDescriptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReleaseDescriptionServiceServer).ReleaseDescriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ReleaseDescriptionService/ReleaseDescriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReleaseDescriptionServiceServer).ReleaseDescriptions(ctx, req.(*ReleaseDescriptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReleaseDescriptionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ReleaseDescriptionService",
	HandlerType: (*ReleaseDescriptionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReleaseDescriptions",
			Handler:    _ReleaseDescriptionService_ReleaseDescriptions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/release_description.proto",
}
