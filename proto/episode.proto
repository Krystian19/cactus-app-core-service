syntax = "proto3";

package proto;

import "proto/common.proto";

message Episode {
	int64 id = 1;
	string thumbnail = 2;
	int64 episode_order = 3;
    string episode_code = 4;
	string created_at = 5;
	string updated_at = 6;

	// Relations
	int64 release_id = 7;
}

message EpisodeQuery {
	int64 release_id = 3;

	// Pagination
	int64 offset = 10;
	int64 limit = 11;
}

message EpisodeRequest {
	int64 id = 1;
	int64 release_id = 2;
	OrderBy order_by = 3;
	LessThan lessThan = 4;
	GreaterThan greaterThan = 5;
}

message EpisodeCountRequest {
	int64 release_id = 1;
}

message EpisodesRequest {
	EpisodeQuery query = 1;
	OrderBy order_by = 2;
}

message EpisodeResponse { 
	Episode episode = 1; 
}

message EpisodeCountResponse { 
	int64 count = 1; 
}

message EpisodesResponse { 
	repeated Episode episodes = 1;
	int64 count = 2;
}

message EpisodeSubtitle {
	int64 id = 1;
	string subtitle_code = 2;

	// Relations
	int64 episode_id = 7;
	int64 language_id = 8;
}

message EpisodeSubtitlesRequest {
	int64 episode_id = 1;
}

message EpisodeSubtitlesListResponse { 
	repeated EpisodeSubtitle EpisodeSubtitles = 1;
}

message EpisodeSeen {
	int64 id = 1;	
	string created_at = 3;
	string updated_at = 4;

	// Relations
	int64 episode_id = 7;
	// int64 user_id = 8; // TODO: use this field when users are implemented
}

message EpisodeSeenRequest {
	int64 episode_id = 1;

	// This episode was seen by user x
	// int64 user_id = 8; // TODO: use this field when users are implemented
}

service EpisodeService {
	rpc Episode(EpisodeRequest) returns (EpisodeResponse);
	rpc Episodes(EpisodesRequest) returns (EpisodesResponse);
	rpc HottestEpisodes(PaginationRequest) returns (EpisodesResponse);
	rpc EpisodeCount(EpisodeCountRequest) returns (EpisodeCountResponse);
	rpc EpisodeSubtitles(EpisodeSubtitlesRequest) returns (EpisodeSubtitlesListResponse);
	rpc EpisodeSeen(EpisodeSeenRequest) returns (Empty);
}
